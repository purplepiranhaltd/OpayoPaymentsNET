# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:            # Allow running the workflow manually from the GitHub UI
  push:
    branches: [ "main" ]        # Run the workflow when pushing to the main branch
  pull_request:
    branches: [ "main" ]        # Run the workflow for all pull requests
  release:
    types: [published]                 # Run the workflow when a new GitHub release is published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget
  
jobs:
  build_test_pack:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
    - name: Create Nuget Package
      run: dotnet pack OpayoPaymentsNet/OpayoPaymentsNet.csproj --configuration Release --no-build --output ${{ env.NuGetDirectory }}
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg
        
  push_github:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ build_test_pack ]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
        source-url: https://nuget.pkg.github.com/purplepiranhaltd/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}
    - name: Push Nuget Package
      run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg

  push_nuget:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ build_test_pack ]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
      env:
        SOURCE: https://api.nuget.org/v3/index.json
        API_KEY: ${{ secrets.NUGET_OPAYOPAYMENTSNET }}
    - name: Push Nuget Package
      run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg --api-key ${{ env.API_KEY }} --source ${{ env.SOURCE }}
